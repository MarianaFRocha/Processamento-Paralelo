
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
import matplotlib as mpl
import numpy as np


sequencial = [
[0.00009, 0.00011, 0.00009, 0.00008, 0.00008, 0.00008, 0.00007, 0.00009, 0.00009, 0.00007, 0.00007, 0.00007, 0.00007, 0.00010, 0.00011, 0.00008, 0.00008, 0.00008, 0.00009, 0.00008, 0.00007, 0.00007, 0.00008, 0.00008, 0.00008, 0.00008, 0.00009, 0.00010, 0.00009, 0.00009],
[0.00542, 0.00514, 0.00473, 0.00470, 0.00473, 0.00468, 0.00469, 0.00465, 0.00481, 0.00470, 0.00468, 0.00470, 0.00464, 0.00465, 0.00480, 0.00463, 0.00514, 0.00490, 0.00466, 0.00467, 0.00470, 0.00464, 0.00482, 0.00470, 0.00464, 0.00512, 0.00469, 0.00466, 0.00468, 0.00474],
[0.03501, 0.03178, 0.03223, 0.03178, 0.03211, 0.03268, 0.03309, 0.03199, 0.03225, 0.03253, 0.03290, 0.03172, 0.03365, 0.03283, 0.03230, 0.03242, 0.03202, 0.03188, 0.03324, 0.03175, 0.03315, 0.03204, 0.03329, 0.03237, 0.03572, 0.03501, 0.03391, 0.03263, 0.03208, 0.03177],
[0.09661, 0.10280, 0.10276, 0.10832, 0.10336, 0.10081, 0.09563, 0.09505, 0.10461, 0.09561, 0.09616, 0.09663, 0.09570, 0.12266, 0.11089, 0.09994, 0.10025, 0.11298, 0.10730, 0.10317, 0.09580, 0.09598, 0.09706, 0.09968, 0.09721, 0.10146, 0.09668, 0.09805, 0.09605, 0.09948],
[0.41159, 0.41216, 0.41708, 0.41808, 0.41598, 0.40979, 0.40638, 0.41145, 0.40832, 0.49047, 0.44989, 0.41022, 0.40891, 0.41056, 0.40695, 0.45917, 0.41664, 0.41390, 0.41190, 0.41503, 0.40915, 0.55070, 0.40769, 0.41209, 0.41496, 0.40609, 0.41162, 0.41941, 0.41124, 0.42372],
[1.15366, 1.20964, 1.18600, 1.19292, 1.18897, 1.19279, 1.18716, 1.21456, 1.25502, 1.17390, 1.17080, 1.41349, 1.30034, 1.17507, 1.46450, 1.45653, 1.39554, 1.37254, 1.17030, 1.33085, 1.18642, 1.18132, 1.17776, 1.20698, 1.17866, 1.18939, 1.20659, 1.20844, 1.21052, 1.22208]
]

paralelo = [
[0.00033, 0.00026, 0.00029, 0.00026, 0.00023, 0.00023, 0.00023, 0.00022, 0.00024, 0.00029, 0.00024, 0.00023, 0.00038, 0.00031, 0.00023, 0.00069, 0.00026, 0.00022, 0.00036, 0.00024, 0.00036, 0.00026, 0.00031, 0.00027, 0.00037, 0.00035, 0.00029, 0.00023, 0.00020, 0.00028],
[0.00430, 0.00482, 0.00401, 0.00484, 0.00478, 0.00457, 0.00487, 0.00449, 0.00507, 0.00495, 0.00384, 0.00566, 0.00517, 0.00526, 0.00635, 0.00427, 0.00431, 0.00441, 0.00460, 0.00502, 0.00486, 0.00407, 0.00481, 0.00367, 0.00564, 0.00471, 0.00521, 0.00375, 0.00505, 0.00459],
[0.02385, 0.02180, 0.02410, 0.02633, 0.02215, 0.02757, 0.02400, 0.02218, 0.02325, 0.02121, 0.02792, 0.02320, 0.02363, 0.02424, 0.02241, 0.02116, 0.02343, 0.02237, 0.02782, 0.02331, 0.02302, 0.01972, 0.02358, 0.02688, 0.02228, 0.02702, 0.02167, 0.02284, 0.02323, 0.02349],
[0.06253, 0.06627, 0.06130, 0.06281, 0.06392, 0.06130, 0.06708, 0.06136, 0.06360, 0.06738, 0.06417, 0.06117, 0.06091, 0.06329, 0.06679, 0.06355, 0.06378, 0.06202, 0.06326, 0.06246, 0.06258, 0.06258, 0.06895, 0.06799, 0.06743, 0.06183, 0.07877, 0.06734, 0.07665, 0.06515],
[0.37856, 0.37425, 0.42653, 0.37706, 0.44162, 0.39344, 0.43591, 0.38952, 0.49039, 0.44976, 0.42598, 0.39215, 0.42992, 0.36601, 0.40651, 0.39023, 0.36215, 0.39009, 0.39913, 0.38752, 0.37080, 0.40285, 0.42076, 0.34821, 0.45591, 0.43143, 0.42316, 0.41118, 0.52141, 0.49433],
[1.90088, 1.87069, 1.85480, 1.85389, 1.69232, 1.94572, 1.71187, 2.10462, 2.04348, 1.95851, 2.07231, 2.06185, 2.03085, 1.77807, 1.95500, 2.23441, 2.00312, 1.82906, 2.28935, 2.13590, 1.85414, 1.81147, 1.95648, 1.76093, 1.97304, 1.74269, 1.94997, 2.23415, 1.83438, 1.95638]
]

mediasequencial = []
stdsequencial = []
mediaparalelo = []
stdparalelo = []

for i in range(6):
	mediasequencial.append(np.mean(sequencial[i]))
	stdsequencial.append(np.std(sequencial[i]))
	mediaparalelo.append(np.mean(paralelo[i]))
	stdparalelo.append(np.std(paralelo[i]))

fig = plt.figure(figsize=(10,5))
ax1 = fig.add_subplot(111)


## Média e desvio padrão ##

plt.errorbar(np.array(range(len(mediasequencial)))*2, mediasequencial, stdsequencial,label=r'Sequencial', color='#1F77B4', fmt='o', lw=1, capsize=4, markersize=8, markeredgecolor='#1F77B4', markerfacecolor='#8FBBD9')
plt.plot(np.array(range(len(mediasequencial)))*2, mediasequencial, color='#1F77B4',lw=2)

plt.errorbar(np.array(range(len(mediaparalelo)))*2, mediaparalelo, stdparalelo,label=r'Paralelo', color='#D62728', fmt='s', lw=1, capsize=4, markersize=8, markeredgecolor='#D62728', markerfacecolor='#EA9393')
plt.plot(np.array(range(len(mediaparalelo)))*2, mediaparalelo, color='#D62728',lw=2)



ax1.yaxis.grid(True, linestyle='-', linewidth=0.5, which='major', color='lightgrey',alpha=1.0)
# ax1.xaxis.grid(True, linestyle='-', linewidth=0.5, which='major', color='lightgrey',alpha=1.0)

fontSize=12

ax1.set_axisbelow(True)
# ax1.set_title('Titulo', fontsize=fontSize+3, fontweight='bold')
ax1.set_xlabel(r'Tamanho matriz', fontsize=fontSize+2)
ax1.set_ylabel('Tempo médio (em seg)', fontsize=fontSize+2)
ax1.xaxis.set_label_coords(0.5, -0.08)
#ax1.set_facecolor('white')


handles, labels = ax1.get_legend_handles_labels()
leg = ax1.legend(handles, labels, bbox_to_anchor=(0.01, 0.98), loc=2, borderaxespad=0., fontsize=fontSize)
leg.get_frame().set_facecolor('#FFFFFF')
# plt.legend(title=r'Compilador')


ticks = ['10','100', '200', '300', '500', '700']
plt.xticks(range(0, len(ticks)*2, 2), ticks, fontsize=fontSize)
plt.yticks(fontsize=fontSize)
plt.xlim(-1, len(ticks)*2-1)
#plt.ylim(-10, 40)


plt.tight_layout()
# plt.show()

plt.savefig('Grafico.pdf',bbox_inches='tight')
