
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches
import matplotlib as mpl
import numpy as np


sequencial = [
[0.00012, 0.00029, 0.00018, 0.00015, 0.00016, 0.00019, 0.00011, 0.00017, 0.00014, 0.00018, 0.00011, 0.00011, 0.00012, 0.00012, 0.00011, 0.00013, 0.00011, 0.00011, 0.00017, 0.00015, 0.00018, 0.00016, 0.00012, 0.00012, 0.00012, 0.00012, 0.00017, 0.00017, 0.00013, 0.00011],
[0.03691, 0.03486, 0.03520, 0.03490, 0.03494, 0.03599, 0.03760, 0.03576, 0.03596, 0.03683, 0.03701, 0.03675, 0.03607, 0.03609, 0.03593, 0.03886, 0.03692, 0.03723, 0.03617, 0.03578, 0.03620, 0.03621, 0.03630, 0.03627, 0.03628, 0.03596, 0.03644, 0.03579, 0.03645, 0.03483],
[0.27165, 0.27196, 0.27096, 0.27236, 0.28760, 0.27351, 0.27180, 0.29027, 0.27126, 0.27668, 0.27407, 0.27296, 0.27383, 0.27126, 0.27604, 0.26825, 0.27522, 0.27285, 0.27848, 0.26767, 0.27465, 0.26657, 0.27472, 0.27975, 0.28122, 0.26702, 0.27216, 0.27291, 0.28004, 0.26935],
[0.91869, 0.90258, 0.88614, 0.89661, 0.90084, 0.91368, 0.90006, 0.89073, 0.89807, 0.90281, 0.91936, 0.91874, 0.91062, 0.91337, 0.91498, 0.89520, 0.92493, 0.89904, 0.90755, 0.93992, 0.95318, 0.90259, 0.90983, 0.90510, 0.90837, 0.90688, 0.92062, 0.93104, 0.93470, 0.89920],
[4.13338, 4.11539, 4.10518, 4.25576, 4.13364, 4.09511, 4.10855, 4.07678, 4.14648, 4.08876, 4.14449, 4.08801, 4.10367, 4.39251, 4.09553, 4.23362, 4.50733, 4.10888, 4.12407, 4.08737, 4.14876, 4.07887, 4.13063, 4.08631, 4.13290, 4.06269, 4.07305, 4.05984, 4.10641, 4.39594],
[11.66923, 11.60940, 11.34314, 11.44027, 11.48327, 11.42132, 11.49388, 11.53441, 11.37063, 11.39835, 11.49457, 11.48029, 11.48237, 11.49861, 11.49850, 11.85226, 11.95862, 11.76114, 11.92790, 12.17725, 11.90863, 11.56816, 11.29969, 11.47075, 11.19224, 11.36344, 12.00948, 11.89386]
]

paralelo = [
[0.00040, 0.00037, 0.00031, 0.00029, 0.00024, 0.00023, 0.00026, 0.00025, 0.00030, 0.00024, 0.00023, 0.00028, 0.00027, 0.00028, 0.00060, 0.00049, 0.00024, 0.00023, 0.00028, 0.00032, 0.00025, 0.00030, 0.00032, 0.00026, 0.00026, 0.00044, 0.00032, 0.00025, 0.00022, 0.00025],
[0.02107, 0.02584, 0.02226, 0.02215, 0.02698, 0.02613, 0.02740, 0.02773, 0.02585, 0.01883, 0.02244, 0.02834, 0.02675, 0.02700, 0.02536, 0.02069, 0.02566, 0.02295, 0.02716, 0.02362, 0.01918, 0.02058, 0.02379, 0.02799, 0.02068, 0.03061, 0.01989, 0.02601, 0.02066, 0.02234],
[0.15533, 0.14583, 0.14763, 0.14752, 0.14810, 0.20847, 0.20992, 0.20155, 0.21027, 0.14509, 0.15365, 0.14992, 0.14549, 0.14766, 0.17829, 0.20387, 0.16600, 0.15064, 0.14534, 0.14548, 0.14635, 0.20133, 0.19914, 0.15762, 0.20612, 0.14896, 0.20367, 0.21023, 0.13918, 0.20809],
[0.49273, 0.59596, 0.67237, 0.67025, 0.67162, 0.68209, 0.67240, 0.63178, 0.48215, 0.49651, 0.48619, 0.48220, 0.46795, 0.47970, 0.48639, 0.67049, 0.67419, 0.66512, 0.67179, 0.69993, 0.51909, 0.47753, 0.49018, 0.65972, 0.48591, 0.66102, 0.67843, 0.66889, 0.48828, 0.58491],
[2.27885, 2.23300, 3.10089, 2.25024, 2.24321, 2.21457, 2.20961, 3.14654, 2.23358, 2.23218, 2.23159, 3.07196, 2.24697, 2.21827, 2.22352, 2.20488, 2.34132, 2.36422, 2.37234, 2.41125, 2.38887, 2.37968, 2.42429, 2.38558, 2.39997, 2.47664, 2.60454, 2.62363, 2.54170, 2.50967],
[7.00885, 6.89444, 7.51435, 7.08515, 7.21590, 7.23333, 7.01322, 6.87275, 7.40323, 6.59604, 7.06703, 6.56117, 6.58585, 6.59345, 6.60547, 6.59819, 6.55838, 6.68989, 6.61753, 6.92490, 6.54960, 6.84036, 7.26638, 7.40412, 6.60093, 6.56831, 6.58275, 6.77172, 7.07433, 7.29773]
]

mediasequencial = []
stdsequencial = []
mediaparalelo = []
stdparalelo = []

for i in range(6):
	mediasequencial.append(np.mean(sequencial[i]))
	stdsequencial.append(np.std(sequencial[i]))
	mediaparalelo.append(np.mean(paralelo[i]))
	stdparalelo.append(np.std(paralelo[i]))

fig = plt.figure(figsize=(10,5))
ax1 = fig.add_subplot(111)


## Média e desvio padrão ##

plt.errorbar(np.array(range(len(mediasequencial)))*2, mediasequencial, stdsequencial,label=r'Sequencial', color='#1F77B4', fmt='o', lw=1, capsize=4, markersize=8, markeredgecolor='#1F77B4', markerfacecolor='#8FBBD9')
plt.plot(np.array(range(len(mediasequencial)))*2, mediasequencial, color='#1F77B4',lw=2)

plt.errorbar(np.array(range(len(mediaparalelo)))*2, mediaparalelo, stdparalelo,label=r'Paralelo', color='#D62728', fmt='s', lw=1, capsize=4, markersize=8, markeredgecolor='#D62728', markerfacecolor='#EA9393')
plt.plot(np.array(range(len(mediaparalelo)))*2, mediaparalelo, color='#D62728',lw=2)



ax1.yaxis.grid(True, linestyle='-', linewidth=0.5, which='major', color='lightgrey',alpha=1.0)
# ax1.xaxis.grid(True, linestyle='-', linewidth=0.5, which='major', color='lightgrey',alpha=1.0)

fontSize=12

ax1.set_axisbelow(True)
# ax1.set_title('Titulo', fontsize=fontSize+3, fontweight='bold')
ax1.set_xlabel(r'Tamanho matriz', fontsize=fontSize+2)
ax1.set_ylabel('Tempo médio (em seg)', fontsize=fontSize+2)
ax1.xaxis.set_label_coords(0.5, -0.08)
#ax1.set_facecolor('white')


handles, labels = ax1.get_legend_handles_labels()
leg = ax1.legend(handles, labels, bbox_to_anchor=(0.01, 0.98), loc=2, borderaxespad=0., fontsize=fontSize)
leg.get_frame().set_facecolor('#FFFFFF')
# plt.legend(title=r'Compilador')


ticks = ['10','100', '200', '300', '500', '700']
plt.xticks(range(0, len(ticks)*2, 2), ticks, fontsize=fontSize)
plt.yticks(fontsize=fontSize)
plt.xlim(-1, len(ticks)*2-1)
#plt.ylim(-10, 40)


plt.tight_layout()
# plt.show()

plt.savefig('Grafico.pdf',bbox_inches='tight')
